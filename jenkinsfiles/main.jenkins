node
{
	stage ('Code Checkout') 
	{
		checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/nickolagr/laba_7.git']]])
	}
	
	stage ('Code Quality')
	{
		script {
      def scannerHome = tool name: 'sonscan', type: 'hudson.plugins.sonar.SonarRunnerInstallation';
      withSonarQubeEnv("sonar") {
      sh """${scannerHome}/bin/sonar-scanner"""
               }
            }
	}
	
	stage("Quality Gate")
	{
		sleep(60)
		timeout(time: 1, unit: 'MINUTES')
		{
			def qg = waitForQualityGate()
			print "Finished waiting"
			if (qg.status != 'OK')
				{
					error "Pipeline aborted due to quality gate failure: ${qg.status}"
				}
		}
    }
	
	stage ('Build')
	{
		script
		{
			echo '----BUILD----'
			sh 'pwd'
		}
	}
}
