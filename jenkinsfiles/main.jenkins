node
{
	stage ('Code Checkout') 
	{
		checkout([$class: 'GitSCM', branches: [[name: '*/sonar_gate']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'git', url: 'git@github.com:AlexViki/laba7_jenkins_sonarqube.git']]])
	}
	
	stage ('Code Quality')
	{
		script
		{
			def scannerHome = tool 'SonarQubeScaner';
			withSonarQubeEnv("SonarQubeServer")
			{
				sh "${tool("SonarQubeScaner")}/bin/sonar-scanner"
            }
        }
	}
	
	stage("Quality Gate")
	{
		sleep(60)
		timeout(time: 1, unit: 'MINUTES')
		{
			def qg = waitForQualityGate()
			print "Finished waiting"
			if (qg.status != 'OK')
				{
					error "Pipeline aborted due to quality gate failure: ${qg.status}"
				}
		}
    }
	
	stage ('Build')
	{
		script
		{
			echo '----BUILD----'
			sh 'pwd'
		}
	}
}
